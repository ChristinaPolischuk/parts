:root{--color-accent:#156485;--color-accent-bg:#EBF0FF;--color-black:#333}@font-face{font-family:"Roboto";src:local("Roboto-Regular"),url(../fonts/Roboto-Regular.woff) format("woff"),url(../fonts/Roboto-Regular.woff2) format("woff2"),url(../fonts/Roboto-Regular.ttf) format("ttf"),url(../fonts/Roboto-Regular.eot) format("eot");font-weight:400;font-style:normal}@font-face{font-family:"Roboto";src:local("Roboto-Medium"),url(../fonts/Roboto-Medium.woff) format("woff"),url(../fonts/Roboto-Medium.woff2) format("woff2"),url(../fonts/Roboto-Medium.ttf) format("ttf"),url(../fonts/Roboto-Medium.eot) format("eot");font-weight:500;font-style:normal}@font-face{font-family:"Roboto";src:local("Roboto-Bold"),url(../fonts/Roboto-Bold.woff) format("woff"),url(../fonts/Roboto-Bold.woff2) format("woff2"),url(../fonts/Roboto-Bold.ttf) format("ttf"),url(../fonts/Roboto-Bold.eot) format("eot");font-weight:700;font-style:normal}*,::after,::before{-webkit-box-sizing:border-box;box-sizing:border-box}html{line-height:1;font-size:16px}body{font:16px/1.4 Roboto,Arial,sans-serif;color:var(--color-black)}body,h1,h2,h3,h4,h5,h6,li,p,ul{margin:0}h2,h3,h4,h5,h6{color:#000}li,ul{padding:0}li{list-style:none}a{text-decoration:none;color:inherit}audio,canvas,iframe,img,svg,video{vertical-align:middle}textarea{resize:none}button,input,select{outline:0}button,input[type=button]{cursor:pointer;border:0}.container{max-width:1270px;padding:0 15px;margin:0 auto}.section{padding:80px 0}.section-bg{background:#f9fafd}.section-title{margin-bottom:30px;font-size:44px;color:#000}.slick-slider{min-width:0}.slick-list{overflow:hidden}.slick-track{display:-webkit-box;display:-ms-flexbox;display:flex}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */